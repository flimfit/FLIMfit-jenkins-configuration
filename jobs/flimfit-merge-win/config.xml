<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.26.1">
      <projectUrl>https://github.com/flimfit/FLIMfit/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.1.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://github.com/flimfit/FLIMfit.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${sha1}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>false</trackingSubmodules>
        <reference></reference>
        <parentCredentials>false</parentCredentials>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.CleanCheckout/>
    </extensions>
  </scm>
  <assignedNode>garvan-win</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <org.jenkinsci.plugins.ghprb.GhprbTrigger plugin="ghprb@1.35.0">
      <spec>H/5 * * * *</spec>
      <latestVersion>3</latestVersion>
      <configVersion>3</configVersion>
      <adminlist>seanwarren imunro</adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>false</allowMembersOfWhitelistedOrgsAsAdmin>
      <orgslist>openmicroscopy</orgslist>
      <cron>H/5 * * * *</cron>
      <buildDescTemplate>PR #$pullId:  $abbrTitle</buildDescTemplate>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>false</permitAll>
      <whitelist>seanwarren</whitelist>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <displayBuildErrorsOnDownstreamBuilds>false</displayBuildErrorsOnDownstreamBuilds>
      <whiteListTargetBranches>
        <org.jenkinsci.plugins.ghprb.GhprbBranch>
          <branch></branch>
        </org.jenkinsci.plugins.ghprb.GhprbBranch>
      </whiteListTargetBranches>
      <blackListTargetBranches>
        <org.jenkinsci.plugins.ghprb.GhprbBranch>
          <branch></branch>
        </org.jenkinsci.plugins.ghprb.GhprbBranch>
      </blackListTargetBranches>
      <gitHubAuthId>f0858a9a-5f4e-4833-827e-67b19ee0679d</gitHubAuthId>
      <triggerPhrase>Trigger build</triggerPhrase>
      <skipBuildPhrase>.*\[skip\W+ci\].*</skipBuildPhrase>
      <blackListLabels></blackListLabels>
      <whiteListLabels></whiteListLabels>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>CI server Windows build</commitStatusContext>
          <triggeredStatus>Triggering build...</triggeredStatus>
          <startedStatus>Started build...</startedStatus>
          <statusUrl></statusUrl>
          <addTestResults>false</addTestResults>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <EnvInjectBuilder plugin="envinject@1.93.1">
      <info>
        <propertiesContent>MATLAB_VER=R2016b
NO_ADMIN=true </propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.BatchFile>
      <command>Configure.bat</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>GatherDependencies.bat</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>RMDIR FLIMfitStandalone /s /q&#xd;
BuildFLIMfit.bat</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>SignInstaller.bat</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>FOR /F &quot;delims=&quot; %%i IN (&apos;git describe&apos;) DO set VERSION=%%i&#xd;
ECHO GIT_DESCRIBE=%VERSION% &gt; git.properties</command>
    </hudson.tasks.BatchFile>
    <EnvInjectBuilder plugin="envinject@1.93.1">
      <info>
        <propertiesFilePath>git.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <com.google.jenkins.plugins.storage.GoogleCloudStorageUploader plugin="google-storage-plugin@0.10-SNAPSHOT">
      <credentialsId>FLIMfit</credentialsId>
      <uploads>
        <com.google.jenkins.plugins.storage.ClassicUpload>
          <bucketNameWithVars>gs://flimfit-downloads/merge/${GIT_DESCRIBE}</bucketNameWithVars>
          <sharedPublicly>true</sharedPublicly>
          <forFailedJobs>false</forFailedJobs>
          <pathPrefix>FLIMfitStandalone/Installer/</pathPrefix>
          <module/>
          <sourceGlobWithVars>**/FLIMfitStandalone/Installer/*.exe</sourceGlobWithVars>
        </com.google.jenkins.plugins.storage.ClassicUpload>
      </uploads>
    </com.google.jenkins.plugins.storage.GoogleCloudStorageUploader>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain>flimfit</teamDomain>
      <authToken></authToken>
      <authTokenCredentialId>slack-token</authTokenCredentialId>
      <botUser>false</botUser>
      <room>#build</room>
      <startNotification>false</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>true</notifyAborted>
      <notifyNotBuilt>true</notifyNotBuilt>
      <notifyUnstable>true</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>true</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>AUTHORS_AND_TITLES</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.10">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>cert-password</credentialsId>
          <variable>CERTPASS</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
          <credentialsId>flimfit-cert</credentialsId>
          <variable>CERTFILE</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.FileBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>